//html --->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="wrapper">

      <h1>WEATHER APP</h1>

      <div class="tab-container">
        <p class="tab" data-userWeather>Your weather</p>
        <p class="tab" data-searchWeather>Search weather</p>
      </div>

      <div class="weather-container">
        <!-- grant location -->
        <div class="grant-location-container">
          <img src="./images/location.png" width="80" height="80" loading="lazy">
          <p>grant location Access</p>
          <p>Allow Access to get weather Information</p>
          <button class="btn" data-grantAccess>Grant Access</button>
        </div>

        <!-- search form -->
        <form class="form-container" data-searchform>
          <input placeholder="Search for City" data-searchInput>
          <button class="btn" type="submit">
            <img src="./images/search.png" loading="lazy" width="20" height="20" alt="search logo">
          </button>
        </form>
        <!-- loading screen container -->
        <div class="loading-conatiner">
          <img src="./images/loading.gif" width="150" height="150">
          <p>Loading</p>
        </div>
        <!-- show weather info -->
        <div class="user-info-container">
          <!-- city name and flag -->
          <div class="name">
            <p data-cityName></p>
            <img data-countryIcon>
          </div>
          <!-- weather description -->
          <p data-weatherDesc></p>
          <!-- weather icon -->
          <img data-weatherIcon>
          <!-- temperature -->
          <p data-temp></p>

          <!-- 3 cards - parameters -->
          <div class="parameter-container">

            <!-- card 1-->
            <div class="parameter">
              <img src="./images/wind.png">
              <p>windspeed</p>
              <p data-windspeed></p>
            </div>

            <!-- card 2-->
            <div class="parameter">
              <img src="./images/humidity.png">
              <p>humidity</p>
              <p data-humidity></p>
            </div>

            <!-- card 3-->
            <div class="parameter">
              <img src="./images/cloud.png">
              <p>Clouds</p>
              <p data-cloudiness></p>
            </div>

          </div>

        </div>

      </div>

      

    </div>



    <script src="script.js"></script>
</body>
</html>








//css  --->


.tab.current-tab{
    background-color: rgba(219, 226, 239, 0.5);
    border-radius: 4px;
}

.form-container.active{
    scale: 1;
}











// javascript --->
const { json } = require("stream/consumers");

const userTab = document.querySelector("[data-userWeather]");
const searchTab = document.querySelector("[data-searchrWeather]");

const userContainer = document.querySelector(".weather-container");
const grantAccessContainer = document.querySelector(".grant-location-container");

const searchForm = document.querySelector("[data-searchform>]");
const loadingScreen = document.querySelector(".loading-conatiner");
const userInfoContainer = document.querySelector(".user-info-container");

//initially
let currentTab = userTab;
const API_key = "be284507c8f7aa9153d863329c45f418";

currentTab.classList.add("current-tab");
getfronSessionStorage();

userTab.addEventListener("click", () =>{
    //passed clicked tab as input parameter
    switchTab(userTab);
})
searchTab.addEventListener("click", () =>{
    //passed clicked tab as input parameter
    switchTab(searchTab);
})

function switchTab(clickedTab)
{
    if(clickedTab != currentTab)
    {
        //removing background color --> current-tab
        currentTab.classList.remove("current-tab");
        currentTab = clickedTab;
        currentTab.classList.add("current-tab")
    }

    if(!searchForm.classList.contains("active")){
        userInfoContainer.classList.remove("active");
        grantAccessContainer.classList.remove("active");
        searchForm.classList.add("active");
    }
    else{
        // i was on search tab now i want to make your weather tab visible
        searchForm.classList.remove("active");
        userInfoContainer.classList.remove("active");
        getfronSessionStorage();
    }
}

// checks if coordinate are already present in session storage
function getfronSessionStorage(){
    const localCoordinates = sessionStorage.getItem("user-coordinates");
    if(!localCoordinates){
        grantAccessContainer.classList.add("active");
    }
    else{
        const coordinates = JSON.parse(localCoordinates);
        fetchUserWeatherInfo(coordinates);
    }
}

async function fetchUserWeatherInfo(coordinates){
    const {lat,lon} = coordinates;
    // make grant container invisible
    grantAccessContainer.classList.remove("active");
    //make loader invisible
    loadingScreen.classList.add("active");

    // API call
    try{
        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_key}`);
        const data = await response.json();

        loadingScreen.classList.remove("active");
        userInfoContainer.classList.add("active")
        renderWeatherInfo(data);
    }
    catch(err){
        loadingScreen.classList.remove("active");

        console.log("Error Found", err);
    }
}

function renderWeatherInfo(weatherInfo){
    //firstly we have to fetch the element

    const cityName = document.querySelector("[data-cityNAme]");
    const countryIcon = document.querySelector("[data-countryIcon]");
    const desc = document.querySelector("[data-weatherDesc]");
    const weatherIcon = document.querySelector("[data-weatherIcon]");
    const temp = document.querySelector("[data-temp]");
    const windspeed = document.querySelector("[data-windspeed]");
    const humidity = document.querySelector("[data-humidity]");
    const cloudiness = document.querySelector("[data-cloudiness]");


    //fetch values from weatherInfo object and put it UI elements

    cityName.innerText= weatherInfo?.name;
    countryIcon.src = `https://flagcdn.com/144x108/${weatherInfo?.sys?.country.toLowerCase()}.png`;
    desc.innerText = weatherInfo?.weather?.[0]?.description;
    weatherIcon.src = `http://openweathermap.org/img/w/${weatherInfo?.weather?.[0]?.icon}.png`;
    temp.innerText = weatherInfo?.main?.temp;
    windspeed.innerText = weatherInfo?.wind?.speed;
    humidity.innerText = weatherInfo?.main?.humidity;
    cloudiness.innerText = weatherInfo?.clouds?.all;
}

const grantAccessBtn = document.querySelector("[data-grantAccess]")

function getLocation()
{
    if(navigator.geolocation)
    {
        navigator.geolocation.getCurrentPosition(showPosition);

    }
    else{
        alert("No geolocation support available");
        console.log("No geolocation support available")
    }
}

function showPosition(position)
{
    const userCoordinates = {
        lat: position.coords.latitude,
        lon: position.coords.longitude,
    }
    sessionStorage.setItem("user-coordinates", JSON.stringify(userCoordinates));
    fetchUserWeatherInfo(userCoordinates);
}

grantAccessBtn.addEventListener("click", getLocation);


const searchInput = document.querySelector("[data-searchInput]")
searchForm.addEventListener("submit", (e) =>{
    e.preventDefault();
    let cityName = searchInput.value;

    if(cityName === "")
        return;
    else
        fetchUserWeatherInfo(cityName);
})

async function fetchUserWeatherInfo(city){
    loadingScreen.classList.add("active");
    userInfoContainer.classList.remove("active");
    grantAccessContainer.classList.remove("active");

    try{
        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_key}`);

        const data = await response.json();

        loadingScreen.classList.remove("active");
        userInfoContainer.classList.add("active");
        renderWeatherInfo(data);

    }
    catch(err)
    {
        console.log("error found ", err)
    }
}
